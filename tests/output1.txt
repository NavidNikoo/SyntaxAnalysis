Token: Identifier Lexeme: function
Token: Identifier Lexeme: main
Token: Separator Lexeme: (
Token: Separator Lexeme: )
Token: Keyword Lexeme: integer
Token: Identifier Lexeme: x
Token: Separator Lexeme: ;
Token: Separator Lexeme: {
<Statement> -> <Print>
<Print> -> put ( <Expression> ) ;
Token: Keyword Lexeme: put
Token: Separator Lexeme: (
Token: Identifier Lexeme: x
Token: Separator Lexeme: )
Token: Separator Lexeme: ;
<Statement> -> <Scan>
<Scan> -> get ( <IDs> ) ;
Token: Keyword Lexeme: get
Token: Separator Lexeme: (
Token: Identifier Lexeme: x
Token: Separator Lexeme: )
Token: Separator Lexeme: ;
<Statement> -> <If>
<If> -> if ( <Condition> ) <Statement> <OptElse> fi
Token: Keyword Lexeme: if
Token: Separator Lexeme: (
Token: Identifier Lexeme: x
Token: Operator Lexeme: >
Token: Integer Lexeme: 0
Token: Separator Lexeme: )
<Statement> -> <Print>
<Print> -> put ( <Expression> ) ;
Token: Keyword Lexeme: put
Token: Separator Lexeme: (
Token: String Lexeme: true
Token: Separator Lexeme: )
Token: Separator Lexeme: ;
Token: Keyword Lexeme: else
<Statement> -> <Print>
<Print> -> put ( <Expression> ) ;
Token: Keyword Lexeme: put
Token: Separator Lexeme: (
Token: String Lexeme: false
Token: Separator Lexeme: )
Token: Separator Lexeme: ;
Token: Keyword Lexeme: fi
<Statement> -> <Return>
<Return> -> return ; | return <Expression> ;
Token: Keyword Lexeme: return
Token: Separator Lexeme: ;
Token: Separator Lexeme: }
Parsing finished successfully.
